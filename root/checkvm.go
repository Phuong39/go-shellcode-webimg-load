package root
//检测vm虚拟机
import "os"

func Fack(path string) { //判断虚拟机关键文件是否存在
	b, _ := PathExists(path)
	if b {
		os.Exit(1) //退出进程
	}
}
func PathExists(path string) (bool, error) { //判断文件是否存在
	_, err := os.Stat(path)
	if err == nil {
		return true, nil
	}
	if os.IsNotExist(err) {
		return false, nil
	}
	return false, err
}
func Check() {
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C447269766572735C566D6D6F7573652E737973"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C447269766572735C766D747261792E646C6C"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C447269766572735C564D546F6F6C73486F6F6B2E646C6C"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C447269766572735C766D6D6F7573657665722E646C6C"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C447269766572735C766D686766732E646C6C"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C447269766572735C766D47756573744C69622E646C6C"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C447269766572735C56426F784D6F7573652E737973"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C447269766572735C56426F7847756573742E737973"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C447269766572735C56426F7853462E737973"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C447269766572735C56426F78566964656F2E737973"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C76626F78646973702E646C6C"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C76626F78686F6F6B2E646C6C"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C76626F786F676C6572726F727370752E646C6C"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C76626F786F676C706173737468726F7567687370752E646C6C"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C76626F78736572766963652E657865"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C76626F78747261792E657865"))
	Fack(Encode("433A5C77696E646F77735C53797374656D33325C56426F78436F6E74726F6C2E657865"))
}
